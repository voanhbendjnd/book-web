ENUM('CREDIT_CARD', 'DEBIT_CARD', 'CASH_ON_DELIVERY', 'BANK_TRANSFER', 'MOMO', 'ZALO_PAY', 'VNPAY')
cache dùng để lấy dữ liệu mà nó  ít thay đổi rất phù hợp với dữ liệu mà người dùng lấy liên tục mà ít thay đổi chủ yếu là đôi ba ngày mới đổi một lần

// file 
FE gửi data trong đó có file ảnh sẽ nằm trong FormData, lúc nhận ở BE thì nhận là requestPart or Param để nhận ảnh, còn ModalAttribute để nhận data update

 orphanRemoval = true của one to many thì hoạt động tốt nhất khi clear, thì sẽ xóa tất cả file liên quan

@Tractional sẽ lưu những entity có sẳn trong db nếu được lấy ra, ko lưu những entity mới tạo, entity mới tạo phải lưu riêng
cacashe= All chỉ hoạt động hết khi có Transactional, hiệu quả của nó là khi save One thì many sẽ được động save
./gradlew clean
./gradlew compileJava --no-daemon
./gradlew build --no-daemon


1. componentModel = "spring"
Mục đích: Tạo một Spring Bean từ mapper interface này
Công dụng: Cho phép MapStruct tự động tạo implementation và đăng ký nó như một Spring Component
Lợi ích: Có thể inject mapper này vào các Service hoặc Controller khác bằng @Autowired
2. nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE
Mục đích: Xử lý các trường có giá trị null
Công dụng: Khi mapping, nếu source field có giá trị null, thì target field sẽ không bị ghi đè (giữ nguyên giá trị cũ)
Ví dụ: Khi update user, nếu email trong DTO là null, thì email trong entity sẽ không thay đổi
3. nullValueCheckStrategy = NullValueCheckStrategy.ON_IMPLICIT_CONVERSION
Mục đích: Kiểm tra null khi có implicit conversion (chuyển đổi ngầm)
Công dụng: Đảm bảo an toàn khi MapStruct tự động convert giữa các kiểu dữ liệu khác nhau
Ví dụ: Khi convert từ String sang Integer, sẽ kiểm tra null trước khi convert


allEntries = true: Xóa TẤT CẢ entries trong cache region
@CacheEvict với key sẽ chỉ xóa chính xác cache entry có key đó.

./gradlew bootRun --args="--spring.profiles.active=local"

EntityNotFoundException - JPA entity không tìm thấy
DataIntegrityViolationException - Vi phạm database constraints
MethodArgumentTypeMismatchException - Lỗi kiểu dữ liệu URL parameter
IllegalArgumentException - Tham số không hợp lệ

Authentication		400	Clear message
Validation	400	Field errors
Not Found		404	Resource not found
Permission		403	Forbidden
File Upload		400	Upload error
Cart		400	Cart error
Business Logic		400	Business error
Database		409	Constraint violation
Type Mismatch		400	Parameter type erro


 SECURITY HEADERS EXPLAINED:
1. X-Frame-Options: DENY
Bảo vệ: Clickjacking attacks
Ý nghĩa: Ngăn website bị embed trong iframe
2. X-Content-Type-Options: nosniff
Bảo vệ: MIME type sniffing attacks
Ý nghĩa: Browser không đoán content type
3. X-XSS-Protection: 1; mode=block
Bảo vệ: Cross-Site Scripting (XSS)
Ý nghĩa: Block page load nếu detect XSS
4. Content-Security-Policy
Bảo vệ: XSS, injection attacks
Ý nghĩa: Chỉ cho phép resources từ same origin
5. Strict-Transport-Security
Bảo vệ: Man-in-the-middle attacks
Ý nghĩa: Force HTTPS connections
6. Referrer-Policy
Bảo vệ: Information disclosure
Ý nghĩa: Kiểm soát thông tin referrer
🚀 RATE LIMITING RULES:
Rate Limits Applied:
Protection Against:
Brute Force Attacks: Login attempts limited
DoS Attacks: Request rate limited
API Abuse: Per-endpoint limits
Bot Attacks: IP-based tracking

security impovement
✅ Auth Endpoints: 60 requests/minute, 1000/hour
✅ Login Endpoints: 5 attempts/15 minutes
✅ Admin Endpoints: 60 requests/minute
✅ All APIs: Basic rate limiting